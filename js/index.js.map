{"version":3,"sources":["webpack://cinema/webpack/bootstrap","webpack://cinema/webpack/runtime/compat get default export","webpack://cinema/webpack/runtime/define property getters","webpack://cinema/webpack/runtime/hasOwnProperty shorthand","webpack://cinema/webpack/runtime/make namespace object","webpack://cinema/./main.js"],"names":[],"mappings":";;;;;;;;;;;;;;;UAAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;ACN+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,2CAA2C,IAAI,gBAAgB,WAAW;AAC1E;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,mCAAmC;AAC9D;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA,qCAAqC,KAAK,EAAE,IAAI,SAAS,KAAK;AAC9D;AACA,uDAAuD,KAAK;AAC5D;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,MAAM;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK,EAAE,iBAAiB,SAAS,WAAW;AACnF;AACA,0DAA0D,WAAW;AACrE;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;;;AAGA;AACA;;AAEA;;AAEA;AACA,SAAS,cAAc;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,IAAI,SAAS,KAAK;AAC9C;AACA;AACA;AACA,6BAA6B,YAAY;;AAEzC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,YAAY;AACzC,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,SAAS,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,uDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wDAAU;AAC/C;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,gCAAgC,YAAY,wBAAwB,MAAM;AAC1E;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,yEAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,IAAI","file":"index.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Swal from 'sweetalert2';\r\nconst api = 'https://api.themoviedb.org/3/discover/movie?primary_release_date.gte=2021-04-01&primary_release_date.lte=2022-06-06&api_key=21c3b467fac244b77912c5844be89740&language=ru-RU&&region=RU&page=1'\r\nconst path = 'https://image.tmdb.org/t/p/w1280'\r\nconst searchAPI = 'https://api.themoviedb.org/3/search/movie?api_key=3fd2be6f0c70a2a598f084ddfb75487c&query=\"'\r\nconst list = document.querySelector('.movie-list');\r\nconst cinema = document.querySelector('.cinema');\r\n\r\nconst namef = document.querySelector('.name');\r\nconst seats = document.querySelector('.seats');\r\nconst seatFree = document.querySelectorAll('.row .seat:not(.seat-occupied)');\r\nconst total = document.querySelector('.total-price');\r\nconst movieSelect = document.querySelector('#films');\r\nconst selet = document.querySelector('.sel-seat');\r\n\r\n\r\nconst getFilms = async url => {\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, error code: ${res.status}`);\r\n    }\r\n    return await res.json();\r\n};\r\n\r\ngetFilms(api).then(data => {\r\n    console.log(data.results);\r\n    data.results.forEach(({ title, poster_path, release_date }) => {\r\n        new ItemFilm(title, poster_path, release_date).push();\r\n    });\r\n});\r\n\r\nfunction createFilms(img, name, alt, date) {\r\n    const newFilm = document.createElement('div');\r\n    newFilm.classList.add('movie');\r\n    newFilm.setAttribute('data-name', name)\r\n    newFilm.innerHTML = `<img src='${path}${img}' alt=\"${name}\">\r\n                        <div class=\"ticket\">\r\n                            <div class=\"ticket-name\">${name}</div>\r\n                            <div class=\"ticket-date\">\r\n                            Дата выхода: ${date}\r\n                            </div>\r\n                            <div class=\"ticket-buy\">\r\n                                <a class=\"link\" href=\"#\">Купить билет</a>\r\n                            </div>\r\n                        </div>`;\r\n    list.append(newFilm);\r\n    newFilm.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        if (e.target.classList.contains('link')) {\r\n            const label = e.currentTarget.getAttribute('data-name');\r\n            list.style.display = 'none';\r\n            cinema.style.display = 'flex';\r\n            namef.innerHTML = `${label}`;\r\n        }\r\n    })\r\n}\r\nclass ItemFilm {\r\n    constructor(title, img, date) {\r\n        this.img = img;\r\n        this.name = title;\r\n        this.alt = title;\r\n        this.date = date;\r\n    }\r\n    push() {\r\n        createFilms(\r\n            this.img,\r\n            this.name,\r\n            this.alt,\r\n            this.date\r\n        );\r\n    }\r\n}\r\n\r\n// function createFilms(films) {\r\n//     films.forEach(film => {\r\n//         console.log(film);\r\n//         const el = document.createElement('div');\r\n//         el.classList.add('movie')\r\n//         el.innerHTML = `<img src='${path}${film.poster_path}' alt=\"${film.title}\">\r\n//                         <div class=\"ticket\">\r\n//                             <div class=\"ticket-name\">${film.title}</div>\r\n//                             <div class=\"ticket-date\">\r\n//                             Дата выхода: ${film.release_date}\r\n//                             </div>\r\n//                             <div class=\"ticket-buy\">\r\n//                                 <a href=\"#\">Купить билет</a>\r\n//                             </div>\r\n//                         </div>`\r\n//         list.append(el);\r\n//         el.addEventListener('click', (e) => {\r\n//             e.preventDefault();\r\n//                 list.style.display = 'none';\r\n//                 cinema.style.display = 'flex';\r\n//         })\r\n//     })\r\n// }\r\n\r\n\r\nlet price = 130;\r\nlet count = 0;\r\n\r\nconst random1 = Math.floor(Math.random()*seatFree.length);\r\n\r\nlet i;\r\nfor (i=0; i <= random1; i++) {\r\n    const random2 = Math.floor(Math.random()*seatFree.length);\r\n    seatFree[random2].classList.add('seat-busy')\r\n}\r\n\r\nseats.addEventListener('click', (e) => {\r\n    if (e.target.classList.contains('seat') && !e.target.classList.contains('seat-busy') && !e.target.classList.contains('seat-selected')) {\r\n        e.target.classList.add('seat-selected');\r\n        count++;\r\n        const seat = e.target.getAttribute('data-seat');\r\n        const row = e.target.getAttribute('data-row');\r\n        const info = document.createElement('div');\r\n        info.innerHTML = `${row} ряд - ${seat} место.`;\r\n        info.setAttribute('data-row', row);\r\n        info.setAttribute('data-seat', seat);\r\n        selet.append(info);\r\n        total.innerHTML = `${count*price}`\r\n\r\n    } else if (e.target.classList.contains('seat-selected')) {\r\n        e.target.classList.remove('seat-selected');\r\n        const s = selet.querySelectorAll('div');\r\n        s.forEach(i => {\r\n            if (i.getAttribute('data-seat') === e.target.getAttribute('data-seat') && i.getAttribute('data-row') === e.target.getAttribute('data-row')) {\r\n                i.innerHTML = '';\r\n            }\r\n        })\r\n        count--;\r\n        total.innerHTML = `${count*price}`;\r\n    } else if (e.target.classList.contains('seat-busy')) {\r\n        alert('Занято!')\r\n    }\r\n});\r\n\r\n// function updateSelectedCount() {\r\n//     const selectedSeats = document.querySelectorAll('.row .seat-selected');\r\n//\r\n//     const seatsIndex = [...selectedSeats].map(seat => seat.getAttribute('data-seat'));\r\n//     // selectedSeats.forEach(seat => {\r\n//     const seatsRow = [...selectedSeats].map(seat => seat.getAttribute('data-row'))\r\n//         console.log(seatsRow[i]);\r\n//     console.log(seatsIndex[i]);\r\n//\r\n//     const info = document.createElement('div');\r\n//     info.innerHTML = `${seatsRow} ряд - ${seatsIndex} место.`;\r\n//     selet.append(info);\r\n//     // console.log(selectedSeats.(seat => seat.getAttribute('data-row')))\r\n//     localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));\r\n//\r\n//     const selectedSeatsCount = selectedSeats.length;\r\n//\r\n//     let count = selectedSeatsCount;\r\n//     let total = selectedSeatsCount * 120;\r\n//     // console.log(count)\r\n//     // console.log(total)\r\n// }\r\n\r\nfunction populateUI() {\r\n    const selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));\r\n\r\n    if (selectedSeats !== null && selectedSeats.length > 0) {\r\n        seatFree.forEach((seat, index) => {\r\n            if (selectedSeats.indexOf(index) > -1) {\r\n                seat.classList.add('seat-selected');\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nconst pay = document.querySelector('.pay');\r\npay.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    if(count === 0) {\r\n        Swal.fire(\r\n            'Ошибка!',\r\n            'Вы не выбрали ни одного места. Попробуйте еще раз',\r\n            'error'\r\n        )\r\n        return;\r\n    }\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n        customClass: {\r\n            confirmButton: 'btn btn-success',\r\n            cancelButton: 'btn btn-danger'\r\n        },\r\n        buttonsStyling: true\r\n    })\r\n\r\n    swalWithBootstrapButtons.fire({\r\n        title: 'Оплата',\r\n        text: `Сумма к оплате ${count*price} руб. Кол-во билетов: ${count} шт.`,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Да, оплатить!',\r\n        cancelButtonText: 'Нет, передумал!',\r\n        reverseButtons: false\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            swalWithBootstrapButtons.fire(\r\n                'Оплата!',\r\n                'Оплата прошла успешно.',\r\n                'success'\r\n            )\r\n            const a = document.querySelectorAll('.seat-selected');\r\n            a.forEach(i => {\r\n                i.classList.add('seat-busy');\r\n                i.classList.remove('seat-selected');\r\n            });\r\n            document.querySelector('.sel-seat').innerHTML = '';\r\n            count = 0;\r\n            total.innerHTML = '0';\r\n        } else if (\r\n            /* Read more about handling dismissals below */\r\n            result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n            swalWithBootstrapButtons.fire(\r\n                'Оплата',\r\n                'Вы отменили попытку оплаты :(',\r\n                'error'\r\n            )\r\n        }\r\n    })\r\n\r\n})\r\n\r\n// movieSelect.addEventListener('change', (e) => {\r\n//     price = +e.target.value;\r\n//     console.log(price);\r\n//     const a = document.querySelectorAll('.seat-selected');\r\n//     const b = document.querySelectorAll('.seat-busy');\r\n//     a.forEach(i => {\r\n//         i.classList.remove('seat-busy');\r\n//     });\r\n//     b.forEach(i => {\r\n//         i.classList.remove('seat-selected');\r\n//     });\r\n//     document.querySelector('.sel-seat').innerHTML = '';\r\n//     count = 0;\r\n//     total.innerHTML = '0';\r\n// });\r\n"],"sourceRoot":""}